<?xml version="1.0" encoding="UTF-8"?>
<!--
     Attention: Generated code! Do not modify by hand! 
     Generated by: hibernate.hbm.xml.vsl in andromda-hibernate-cartridge.
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="com.algoTrader.entity.SecurityFamilyImpl" table="security_family" dynamic-insert="true" dynamic-update="true">
        <cache usage="read-write" />
        <id name="id" type="int" >
            <generator class="native">
            </generator>
        </id>
        <property name="name" >
            <column name="NAME" not-null="true" unique="false" sql-type="VARCHAR(255)"/>
            <type name="java.lang.String">
            </type>
        </property>
        <property name="market" >
            <column name="MARKET" not-null="true" unique="false" sql-type="VARCHAR(255)"/>
            <type name="org.andromda.persistence.hibernate.usertypes.HibernateEnumType">
                 <param name="enumClassName">com.algoTrader.enumeration.Market</param>
            </type>
        </property>
        <property name="currency" >
            <column name="CURRENCY" not-null="true" unique="false" sql-type="VARCHAR(255)"/>
            <type name="org.andromda.persistence.hibernate.usertypes.HibernateEnumType">
                 <param name="enumClassName">com.algoTrader.enumeration.Currency</param>
            </type>
        </property>
        <property name="contractSize" >
            <column name="CONTRACT_SIZE" not-null="true" unique="false" sql-type="INTEGER"/>
            <type name="int">
            </type>
        </property>
        <property name="tickSize" >
            <column name="TICK_SIZE" not-null="true" unique="false" sql-type="DOUBLE"/>
            <type name="double">
            </type>
        </property>
        <property name="commission" >
            <column name="COMMISSION" not-null="false" unique="false" sql-type="DECIMAL"/>
            <type name="java.math.BigDecimal">
            </type>
        </property>
        <property name="marketOpen" >
            <column name="MARKET_OPEN" not-null="true" unique="false" sql-type="TIME"/>
            <type name="java.util.Date">
            </type>
        </property>
        <property name="marketClose" >
            <column name="MARKET_CLOSE" not-null="true" unique="false" sql-type="TIME"/>
            <type name="java.util.Date">
            </type>
        </property>
        <property name="tradeable" >
            <column name="TRADEABLE" not-null="true" unique="false" sql-type="TINYINT"/>
            <type name="boolean">
            </type>
        </property>
        <property name="expirable" >
            <column name="EXPIRABLE" not-null="true" unique="false" sql-type="TINYINT"/>
            <type name="boolean">
            </type>
        </property>
        <set name="securities" order-by="SECURITY_FAMILY_FK" lazy="true" fetch="select" inverse="true">
            <cache usage="read-write" />
            <key foreign-key="SECURITY_SECURITY_FAMILY_FKC">
                <column name="SECURITY_FAMILY_FK" sql-type="INTEGER"/>
            </key>
            <one-to-many class="com.algoTrader.entity.SecurityImpl"/>
        </set>
        <many-to-one name="underlaying" class="com.algoTrader.entity.SecurityImpl" foreign-key="SECURITY_FAMILY_UNDERLAYING_FC" lazy="proxy" fetch="select">
            <column name="UNDERLAYING_FK" not-null="false" sql-type="INTEGER"/>
        </many-to-one>
    </class>
</hibernate-mapping>