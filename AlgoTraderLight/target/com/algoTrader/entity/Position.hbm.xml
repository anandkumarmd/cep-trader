<?xml version="1.0" encoding="UTF-8"?>
<!--
     Attention: Generated code! Do not modify by hand! 
     Generated by: hibernate.hbm.xml.vsl in andromda-hibernate-cartridge.
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="com.algoTrader.entity.PositionImpl" table="position" dynamic-insert="true" dynamic-update="true">
        <cache usage="read-write" />
        <id name="id" type="int" >
            <generator class="native">
            </generator>
        </id>
        <property name="quantity" >
            <column name="QUANTITY" not-null="true" unique="false" sql-type="BIGINT"/>
            <type name="long">
            </type>
        </property>
        <property name="exitValue" >
            <column name="EXIT_VALUE" not-null="false" unique="false" sql-type="DOUBLE"/>
            <type name="java.lang.Double">
            </type>
        </property>
        <property name="maintenanceMargin" >
            <column name="MAINTENANCE_MARGIN" not-null="false" unique="false" sql-type="DECIMAL"/>
            <type name="java.math.BigDecimal">
            </type>
        </property>
        <many-to-one name="security" class="com.algoTrader.entity.SecurityImpl" foreign-key="POSITION_SECURITY_FKC" lazy="proxy" fetch="select">
            <column name="SECURITY_FK" not-null="true" sql-type="INTEGER"/>
        </many-to-one>
        <many-to-one name="strategy" class="com.algoTrader.entity.StrategyImpl" foreign-key="POSITION_STRATEGY_FKC" lazy="proxy" fetch="select">
            <column name="STRATEGY_FK" not-null="true" sql-type="INTEGER"/>
        </many-to-one>
        <set name="transactions" order-by="POSITION_FK" lazy="true" fetch="select" inverse="true">
            <cache usage="read-write" />
            <key foreign-key="TRANSACTION_POSITION_FKC">
                <column name="POSITION_FK" sql-type="INTEGER"/>
            </key>
            <one-to-many class="com.algoTrader.entity.TransactionImpl"/>
        </set>
    </class>
</hibernate-mapping>